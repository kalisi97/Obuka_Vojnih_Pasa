@model Obuka_Vojnih_Pasa.Models.Domain.Angazovanje
@using Obuka_Vojnih_Pasa.Models.Domain



@{
    ViewData["Title"] = "Create";
}

@{ 
    List<Angazovanje> ocenjenaAngazovanja = new List<Angazovanje>();
}
@{ 
    @if (ViewBag.Ocenjena != null) ocenjenaAngazovanja = ViewBag.Ocenjena;
}

    <body>
@if (ocenjenaAngazovanja.Count() != 0)
{
        <div class="table-borderless" id="tbl">

            <table id="multipleCategoryTbl" class="table" style="margin-top:50px">


                <thead class="multipleCategoryTbl-header">
                    <tr>
                        <th>

                        </th>
                        <th>
                            Pas
                        </th>
                        <th>
                            Naziv zadatka
                        </th>
                        <th>
                            Datum realizacije zadatka
                        </th>
                        <th>
                            Datum unosa ocene
                        </th>
                        <th>
                            Ocena
                        </th>

                     
                    </tr>
                   
                    </thead>
                <tbody>

                    @foreach (Angazovanje item in ocenjenaAngazovanja)
                    {
                        <tr>
                            <td>
                                <i class="fas fa-paw"></i>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Pas.Ime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Zadatak.NazivZadatka)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Zadatak.Datum)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DatumUnosaOcene)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Ocena)
                            </td>
                            </tr>
                    }

                </tbody>
                    </table>

             </div>
}
                    <div class="table-borderless" id="tbl">

                        <table id="multipleCategoryTbl" class="table" style="margin-top:50px">


                            <thead class="multipleCategoryTbl-header">
                                <tr>
                                    <td>

                                        <div class="form-group">

                                            <label asp-for="Pas" class="control-label"> <i class="fas fa-paw"></i> Pas</label>

                                            @Html.DropDownList("PasId", new SelectList(ViewBag.Psi, "Id", "Ime", Model.PasId),
                                                  new { @id = "pas", @class = "form-control" })
                                            <span asp-validation-for="PasId" class="text-danger" />

                                        </div>
                                    </td>
                                    <td style="width:300px">
                                        <div class="form-group">
                                            <label asp-for="Zadatak" class="control-label"><i class="fa fa-rocket"></i> Naziv zadatka</label>

                                            <input type="text" id="zadatak" value="@ViewBag.Zadatak" readonly="readonly" class="form-control" />
                                        </div>
                                    </td>


                                    <td>
                                        <div class="form-group">
                                            <label asp-for="Ocena" class="control-label"><i class="far fa-star"></i> Ocena</label>
                                            <input type="number" min="5" max="10" asp-for="Ocena" id="txtOcena" class="form-control" />
                                            <span asp-validation-for="Ocena" class="text-danger"></span>
                                        </div>

                                    </td>


                                    <td>
                                        <div class="form-group">

                                            <label asp-for="DatumUnosaOcene" class="control-label"><i class="fa fa-calendar-check"></i>  Datum unosa ocene</label>
                                            <input type="date" id="txtDatumUnosaOcene" asp-for="DatumUnosaOcene" class="form-control" style="width:200px" readonly="readonly" />
                                            <span asp-validation-for="DatumUnosaOcene" class="text-danger"></span>
                                        </div>
                                    </td>

                                    <td>
                                        <div class="form-group">
                                            <input type="button" id="btnAdd" value="Dodaj" class="btn btnPsi btn-primary" style="margin-top:25px" />
                                        </div>

                                    </td>
                            </thead>

                            <tbody class="multipleCategoryTbl-body">
                            </tbody>


                        </table>
                    </div>



                    <div class="form-group" style="margin-left:60px">
                        <a asp-action="Index" asp-controller="Home" class="btn btnPsi btn-primary">Otkaži</a>
                        <input type="button" id="btnSave" value="Sačuvaj angažovanja" class="btn btnPsi btn-primary ml-3" />
                    </div>

                    <script type="text/javascript">
            $("body").on("click", "#btnAdd", function () {
            var validate = true;
            var txtPas = $("#pas option:selected");
            var txtZadatak = $("#zadatak");
            var txtDatumUnosaOcene = $("#txtDatumUnosaOcene");
            var txtOcena = $("#txtOcena");
            var tBody = $("#multipleCategoryTbl > TBODY")[0];
                if (txtOcena.val() === "") {
                    validate = false;
                }

                $("#multipleCategoryTbl TBODY TR").each(function () {
                    var row = $(this);
                    var txtTrenutni = row.find("TD").eq(1).html();


                    if (txtPas.val() == txtTrenutni) {
                        validate = false;
                    }



                });




                if (!validate) {

                    Swal.fire({

                        icon: 'error',
                        title: "Nevalidan unos! Proverite da li ste ispravno popunili polje za ocenu ili je pas već ocenjen!"


                    });

                } else {

                    var row = tBody.insertRow(-1);
                    var cell = $(row.insertCell(-1));
                    cell.html(txtPas.text());
                    var cell = $(row.insertCell(-1)).css("display", "none");
                    cell.html(txtPas.val()).css("display", "none");
                    cell = $(row.insertCell(-1));
                    cell.html(txtZadatak.val());
                    cell = $(row.insertCell(-1));
                    cell.html(txtOcena.val());
                    cell = $(row.insertCell(-1));
                    cell.html(txtDatumUnosaOcene.val());
                    cell = $(row.insertCell(-1));
                    var btnRemove = $("<input />");
                    btnRemove.attr("type", "button").css("background", "linear-gradient(to right, #6dd5ed, #2193b0)").css("border-radius", "100px").css("color", "white").css("width", "80px").css("border-color", "silver");
                    btnRemove.attr("onclick", "Remove(this);");
                    btnRemove.val("Obriši");
                    cell.append(btnRemove);
                    txtOcena.val("");

                }

        });
        function Remove(button) {
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();

            Swal.fire({
                title: "Da li ste sigurni da želite da obrišete podatke o psu " + name + "?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Otkaži',
                confirmButtonText: 'Obriši'
            }).then((result) => {
                if (result.value) {
                    var table = $("#multipleCategoryTbl")[0];
                    table.deleteRow(row[0].rowIndex);
                    Swal.fire(
                        'Obrisano!'
                    )
                }
            });


        };


            $("body").on("click", "#btnSave", function () {
                var validate = true;
                var i = 0;

                $("#multipleCategoryTbl TBODY TR").each(function () {
                    i++;

                });

                var z = @ViewBag.BrojAngazovanja;
                if (i !== @ViewBag.BrojAngazovanja) validate = false;

                if (!validate) {

                    Swal.fire({

                        icon: 'error',
                        title: "Nevalidan unos! Proverite da li ste ocenili sva angažovanja!"


                    });

                } else {

                    var angazovanja = new Array();
                    $("#multipleCategoryTbl TBODY TR").each(function () {
                        var row = $(this);
                        var a = {};

                        a.PasId = row.find("TD").eq(1).html();

                        a.ZadatakId = @ViewBag.Id;
                        a.Ocena = row.find("TD").eq(3).html();
                        a.DatumUnosaOcene = row.find("TD").eq(4).html();
                        angazovanja.push(a);
                    }

                    );

                    $.ajax({
                        type: "POST",
                        url: "/Angazovanje/UpdateAngazovanja",
                        data: JSON.stringify(angazovanja),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (r) {


                            Swal.fire({
                                icon: 'success',
                                title: " " + r + " "

                            }).then(function () {

                                window.location.replace('/Zadatak/Index');
                            });
                            $("#multipleCategoryTbl TBODY TR").each(function () {
                                $(this).remove();

                            });

                        }
                    });
                }
        });

                    </script>
    </body>
    <script src="https://cdn.jsdelivr.net/npm/promise-polyfill"></script>
<script src="~/sweetalert2/dist/sweetalert2.all.min.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
<link href="~/content/site.css" rel="stylesheet" />